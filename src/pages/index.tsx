import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import Project from "@/components/Project";
import React, { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [currentProjects, setCurrentProjects] = useState<any>([]);

  const regex = /^\s?#{3}([^#{3}]+?)\n([^]+?)(?=^\s?#{3}[^#{3}])/gm;
  const getTitle = /(?<=#{3} ).*/gm;
  const getLangs =
    /(?:^|\n)## Projects by main language\s[^\n]*\n(.*?)(?=\n##?\s|$)/gs;
  const getLinks = /(?<=\* ).*/gm;
  const parseLinkReg = /\[(.+)\]\((.+)\) - (.+)/;
  const cleanDescReg = /!\[(.+)\]\(.+\)/;

  const cleanDesc = (desc: string) => {
    return desc.replace(cleanDescReg, "");
  };

  const parseLink = (proj: string) => {
    const [, name, url, desc] = proj.match(parseLinkReg) as Array<string>;

    return {
      name: name,
      url: url,
      desc: cleanDesc(desc).trim(),
    };
  };

  const processLinks = (headerContent: string) => {
    const contMatch = headerContent.match(getLinks);
    const link = (contMatch as string[]).map((l) => parseLink(l));
    return link;
  };

  const processHeader = (data: string) => {
    const temp = data.match(regex);

    const t = (temp as string[]).map((element) => ({
      language: (element.match(getTitle) as string[])[0],
      projects: processLinks(element),
    }));
  };

  fetch(
    "https://raw.githubusercontent.com/lirantal/awesome-opensource-israel/master/README.md"
  )
    .then((response) => response.text())
    .then((data) => {
      const langs = data.match(getLangs);
      const results = processHeader((langs as string[])[0]);
      setCurrentProjects(results);
    });

  useEffect(() => {
    console.log(currentProjects);
    

  }, [currentProjects])
  
  return (
    <>
      <Head>
        <title>Open Source Israel</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}></main>
    </>
  );
}
